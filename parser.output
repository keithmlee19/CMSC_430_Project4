Terminals unused in grammar

    MODOP
    EXPOP
    NEGOP
    ELSE
    ELSIF
    ENDIF
    IF
    THEN


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 body: BEGIN_ statement_ END ';'

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | WHEN or_condition ',' expression ':' expression
   18          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   19 cases: cases case
   20      | ε

   21 case: CASE INT_LITERAL ARROW statement ';'

   22 or_condition: or_condition OROP condition
   23             | condition

   24 condition: condition ANDOP not_condition
   25          | not_condition

   26 not_condition: NOTOP relation
   27              | relation

   28 relation: '(' or_condition ')'
   29         | expression RELOP expression

   30 expression: expression ADDOP term
   31           | term

   32 term: term MULOP primary
   33     | primary

   34 primary: '(' expression ')'
   35        | INT_LITERAL
   36        | CHAR_LITERAL
   37        | REAL_LITERAL
   38        | IDENTIFIER '(' expression ')'
   39        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 28 34 38
    ')' (41) 10 28 34 38
    ',' (44) 11 17
    ':' (58) 8 9 17
    ';' (59) 2 8 9 13 14 15 18 21
    error (256) 15
    IDENTIFIER <iden> (258) 2 8 9 38 39
    INT_LITERAL <type> (259) 21 35
    CHAR_LITERAL <type> (260) 36
    REAL_LITERAL <type> (261) 37
    ADDOP (262) 30
    MULOP (263) 32
    MODOP (264)
    EXPOP (265)
    ANDOP (266) 24
    OROP (267) 22
    RELOP (268) 29
    NEGOP (269)
    NOTOP (270) 26
    ARROW (271) 18 21
    BEGIN_ (272) 13
    CASE (273) 21
    CHARACTER (274) 4
    ELSE (275)
    ELSIF (276)
    END (277) 13
    ENDIF (278)
    ENDSWITCH (279) 18
    FUNCTION (280) 2
    IF (281)
    INTEGER (282) 3
    IS (283) 8 9 18
    LIST (284) 9
    OF (285) 9
    OTHERS (286) 18
    REAL (287) 5
    RETURNS (288) 2
    SWITCH (289) 18
    THEN (290)
    WHEN (291) 17


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    function (43)
        on left: 1
        on right: 0
    function_header (44)
        on left: 2
        on right: 1
    type <type> (45)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable (46)
        on left: 6 7
        on right: 1
    variable (47)
        on left: 8 9
        on right: 6
    list <type> (48)
        on left: 10
        on right: 9
    expressions <type> (49)
        on left: 11 12
        on right: 10 11
    body <type> (50)
        on left: 13
        on right: 1
    statement_ <type> (51)
        on left: 14 15
        on right: 13
    statement <type> (52)
        on left: 16 17 18
        on right: 8 14 18 21
    cases <type> (53)
        on left: 19 20
        on right: 18 19
    case <type> (54)
        on left: 21
        on right: 19
    or_condition (55)
        on left: 22 23
        on right: 17 22 28
    condition (56)
        on left: 24 25
        on right: 22 23 24
    not_condition (57)
        on left: 26 27
        on right: 24 25
    relation (58)
        on left: 28 29
        on right: 26 27
    expression <type> (59)
        on left: 30 31
        on right: 11 12 16 17 18 29 30 34 38
    term <type> (60)
        on left: 32 33
        on right: 30 31 32
    primary <type> (61)
        on left: 34 35 36 37 38 39
        on right: 32 33


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   13 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    SWITCH        shift, and go to state 24
    WHEN          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 27
    statement   go to state 28
    expression  go to state 29
    term        go to state 30
    primary     go to state 31


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 32


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 33


State 18

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 34


State 19

   15 statement_: error • ';'

    ';'  shift, and go to state 35


State 20

   38 primary: IDENTIFIER • '(' expression ')'
   39        | IDENTIFIER •

    '('  shift, and go to state 36

    $default  reduce using rule 39 (primary)


State 21

   35 primary: INT_LITERAL •

    $default  reduce using rule 35 (primary)


State 22

   36 primary: CHAR_LITERAL •

    $default  reduce using rule 36 (primary)


State 23

   37 primary: REAL_LITERAL •

    $default  reduce using rule 37 (primary)


State 24

   18 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 37
    term        go to state 30
    primary     go to state 31


State 25

   17 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 38
    '('           shift, and go to state 39

    or_condition   go to state 40
    condition      go to state 41
    not_condition  go to state 42
    relation       go to state 43
    expression     go to state 44
    term           go to state 30
    primary        go to state 31


State 26

   34 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 45
    term        go to state 30
    primary     go to state 31


State 27

   13 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 46


State 28

   14 statement_: statement • ';'

    ';'  shift, and go to state 47


State 29

   16 statement: expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 16 (statement)


State 30

   31 expression: term •
   32 term: term • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 31 (expression)


State 31

   33 term: primary •

    $default  reduce using rule 33 (term)


State 32

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 33

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 50


State 34

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    SWITCH        shift, and go to state 24
    WHEN          shift, and go to state 25
    '('           shift, and go to state 26

    statement   go to state 51
    expression  go to state 29
    term        go to state 30
    primary     go to state 31


State 35

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 36

   38 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 52
    term        go to state 30
    primary     go to state 31


State 37

   18 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    IS     shift, and go to state 53


State 38

   26 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 39

    relation    go to state 54
    expression  go to state 44
    term        go to state 30
    primary     go to state 31


State 39

   28 relation: '(' • or_condition ')'
   34 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 38
    '('           shift, and go to state 39

    or_condition   go to state 55
    condition      go to state 41
    not_condition  go to state 42
    relation       go to state 43
    expression     go to state 56
    term           go to state 30
    primary        go to state 31


State 40

   17 statement: WHEN or_condition • ',' expression ':' expression
   22 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 57
    ','   shift, and go to state 58


State 41

   23 or_condition: condition •
   24 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 59

    $default  reduce using rule 23 (or_condition)


State 42

   25 condition: not_condition •

    $default  reduce using rule 25 (condition)


State 43

   27 not_condition: relation •

    $default  reduce using rule 27 (not_condition)


State 44

   29 relation: expression • RELOP expression
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    RELOP  shift, and go to state 60


State 45

   30 expression: expression • ADDOP term
   34 primary: '(' expression • ')'

    ADDOP  shift, and go to state 48
    ')'    shift, and go to state 61


State 46

   13 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 62


State 47

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 48

   30 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    term     go to state 63
    primary  go to state 31


State 49

   32 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    primary  go to state 64


State 50

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 65


State 51

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 66


State 52

   30 expression: expression • ADDOP term
   38 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 48
    ')'    shift, and go to state 67


State 53

   18 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 20 (cases)

    cases  go to state 68


State 54

   26 not_condition: NOTOP relation •

    $default  reduce using rule 26 (not_condition)


State 55

   22 or_condition: or_condition • OROP condition
   28 relation: '(' or_condition • ')'

    OROP  shift, and go to state 57
    ')'   shift, and go to state 69


State 56

   29 relation: expression • RELOP expression
   30 expression: expression • ADDOP term
   34 primary: '(' expression • ')'

    ADDOP  shift, and go to state 48
    RELOP  shift, and go to state 60
    ')'    shift, and go to state 61


State 57

   22 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 38
    '('           shift, and go to state 39

    condition      go to state 70
    not_condition  go to state 42
    relation       go to state 43
    expression     go to state 44
    term           go to state 30
    primary        go to state 31


State 58

   17 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 71
    term        go to state 30
    primary     go to state 31


State 59

   24 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 38
    '('           shift, and go to state 39

    not_condition  go to state 72
    relation       go to state 43
    expression     go to state 44
    term           go to state 30
    primary        go to state 31


State 60

   29 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 73
    term        go to state 30
    primary     go to state 31


State 61

   34 primary: '(' expression ')' •

    $default  reduce using rule 34 (primary)


State 62

   13 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 13 (body)


State 63

   30 expression: expression ADDOP term •
   32 term: term • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 30 (expression)


State 64

   32 term: term MULOP primary •

    $default  reduce using rule 32 (term)


State 65

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 74

    list  go to state 75


State 66

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 67

   38 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 38 (primary)


State 68

   18 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   19 cases: cases • case

    CASE    shift, and go to state 76
    OTHERS  shift, and go to state 77

    case  go to state 78


State 69

   28 relation: '(' or_condition ')' •

    $default  reduce using rule 28 (relation)


State 70

   22 or_condition: or_condition OROP condition •
   24 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 59

    $default  reduce using rule 22 (or_condition)


State 71

   17 statement: WHEN or_condition ',' expression • ':' expression
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    ':'    shift, and go to state 79


State 72

   24 condition: condition ANDOP not_condition •

    $default  reduce using rule 24 (condition)


State 73

   29 relation: expression RELOP expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 29 (relation)


State 74

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expressions  go to state 80
    expression   go to state 81
    term         go to state 30
    primary      go to state 31


State 75

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 82


State 76

   21 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 83


State 77

   18 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 84


State 78

   19 cases: cases case •

    $default  reduce using rule 19 (cases)


State 79

   17 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 85
    term        go to state 30
    primary     go to state 31


State 80

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 86
    ','  shift, and go to state 87


State 81

   12 expressions: expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 12 (expressions)


State 82

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 83

   21 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 88


State 84

   18 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    SWITCH        shift, and go to state 24
    WHEN          shift, and go to state 25
    '('           shift, and go to state 26

    statement   go to state 89
    expression  go to state 29
    term        go to state 30
    primary     go to state 31


State 85

   17 statement: WHEN or_condition ',' expression ':' expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 17 (statement)


State 86

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 87

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 26

    expression  go to state 90
    term        go to state 30
    primary     go to state 31


State 88

   21 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    SWITCH        shift, and go to state 24
    WHEN          shift, and go to state 25
    '('           shift, and go to state 26

    statement   go to state 91
    expression  go to state 29
    term        go to state 30
    primary     go to state 31


State 89

   18 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 92


State 90

   11 expressions: expressions ',' expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 11 (expressions)


State 91

   21 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 93


State 92

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 94


State 93

   21 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 21 (case)


State 94

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 18 (statement)
