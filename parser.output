Grammar

    0 $accept: function $end

    1 function: function_header optional_variable_ body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable_: optional_variable
    7                   | error ';'

    8 optional_variable: optional_variable variable
    9                  | ε

   10 variable: IDENTIFIER ':' type IS statement ';'
   11         | IDENTIFIER ':' LIST OF type IS list ';'

   12 list: '(' expressions ')'

   13 list_choice: list
   14            | IDENTIFIER

   15 expressions: expressions ',' expression
   16            | expression

   17 body: BEGIN_ statement_ END ';'

   18 statement_: statement ';'
   19           | error ';'

   20 statement: expression
   21          | WHEN or_condition ',' expression ':' expression
   22          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   23          | IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF
   24          | FOLD direction operator list_choice ENDFOLD

   25 elsif_clauses: elsif_clauses elsif_clause
   26              | ε

   27 elsif_clause: ELSIF or_condition THEN statement_

   28 cases: cases case_
   29      | ε

   30 case_: case
   31      | error ';'

   32 case: CASE INT_LITERAL ARROW statement ';'

   33 direction: LEFT
   34          | RIGHT

   35 operator: ADDOP
   36         | MULOP
   37         | EXPOP

   38 or_condition: or_condition OROP condition
   39             | condition

   40 condition: condition ANDOP not_condition
   41          | not_condition

   42 not_condition: NOTOP relation
   43              | relation

   44 relation: '(' or_condition ')'
   45         | expression RELOP expression

   46 expression: expression ADDOP term
   47           | term

   48 term: term MULOP exp_term
   49     | term MODOP exp_term
   50     | exp_term

   51 exp_term: neg_term EXPOP exp_term
   52         | neg_term

   53 neg_term: NEGOP primary
   54         | primary

   55 primary: '(' expression ')'
   56        | INT_LITERAL
   57        | CHAR_LITERAL
   58        | REAL_LITERAL
   59        | IDENTIFIER '(' expression ')'
   60        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 44 55 59
    ')' (41) 12 44 55 59
    ',' (44) 15 21
    ':' (58) 10 11 21
    ';' (59) 2 7 10 11 17 18 19 22 31 32
    error (256) 7 19 31
    IDENTIFIER <iden> (258) 2 10 11 14 59 60
    INT_LITERAL <type> (259) 32 56
    CHAR_LITERAL <type> (260) 57
    REAL_LITERAL <type> (261) 58
    ADDOP (262) 35 46
    MULOP (263) 36 48
    MODOP (264) 49
    EXPOP (265) 37 51
    ANDOP (266) 40
    OROP (267) 38
    RELOP (268) 45
    NEGOP (269) 53
    NOTOP (270) 42
    ARROW (271) 22 32
    BEGIN_ (272) 17
    CASE (273) 32
    CHARACTER (274) 4
    ELSE (275) 23
    ELSIF (276) 27
    END (277) 17
    ENDFOLD (278) 24
    ENDIF (279) 23
    ENDSWITCH (280) 22
    FOLD (281) 24
    FUNCTION (282) 2
    IF (283) 23
    INTEGER (284) 3
    IS (285) 10 11 22
    LEFT (286) 33
    LIST (287) 11
    OF (288) 11
    OTHERS (289) 22
    REAL (290) 5
    RETURNS (291) 2
    RIGHT (292) 34
    SWITCH (293) 22
    THEN (294) 23 27
    WHEN (295) 21


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header <type> (48)
        on left: 2
        on right: 1
    type <type> (49)
        on left: 3 4 5
        on right: 2 10 11
    optional_variable_ (50)
        on left: 6 7
        on right: 1
    optional_variable (51)
        on left: 8 9
        on right: 6 8
    variable (52)
        on left: 10 11
        on right: 8
    list <type> (53)
        on left: 12
        on right: 11 13
    list_choice <type> (54)
        on left: 13 14
        on right: 24
    expressions <type> (55)
        on left: 15 16
        on right: 12 15
    body <type> (56)
        on left: 17
        on right: 1
    statement_ <type> (57)
        on left: 18 19
        on right: 17 23 27
    statement <type> (58)
        on left: 20 21 22 23 24
        on right: 10 18 22 32
    elsif_clauses <type> (59)
        on left: 25 26
        on right: 23 25
    elsif_clause <type> (60)
        on left: 27
        on right: 25
    cases <type> (61)
        on left: 28 29
        on right: 22 28
    case_ <type> (62)
        on left: 30 31
        on right: 28
    case <type> (63)
        on left: 32
        on right: 30
    direction (64)
        on left: 33 34
        on right: 24
    operator (65)
        on left: 35 36 37
        on right: 24
    or_condition (66)
        on left: 38 39
        on right: 21 23 27 38 44
    condition (67)
        on left: 40 41
        on right: 38 39 40
    not_condition (68)
        on left: 42 43
        on right: 40 41
    relation (69)
        on left: 44 45
        on right: 42 43
    expression <type> (70)
        on left: 46 47
        on right: 15 16 20 21 22 45 46 55 59
    term <type> (71)
        on left: 48 49 50
        on right: 46 47 48 49
    exp_term <type> (72)
        on left: 51 52
        on right: 48 49 50 51
    neg_term <type> (73)
        on left: 53 54
        on right: 51 52
    primary <type> (74)
        on left: 55 56 57 58 59 60
        on right: 53 54


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable_ body

    error  shift, and go to state 6

    IDENTIFIER  reduce using rule 9 (optional_variable)
    BEGIN_      reduce using rule 9 (optional_variable)

    optional_variable_  go to state 7
    optional_variable   go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    7 optional_variable_: error • ';'

    ';'  shift, and go to state 10


State 7

    1 function: function_header optional_variable_ • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable_: optional_variable •
    8 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 6 (optional_variable_)

    variable  go to state 14


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 15
    INTEGER    shift, and go to state 16
    REAL       shift, and go to state 17

    type  go to state 18


State 10

    7 optional_variable_: error ';' •

    $default  reduce using rule 7 (optional_variable_)


State 11

   17 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 30
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 12

    1 function: function_header optional_variable_ body •

    $default  reduce using rule 1 (function)


State 13

   10 variable: IDENTIFIER • ':' type IS statement ';'
   11         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 37


State 14

    8 optional_variable: optional_variable variable •

    $default  reduce using rule 8 (optional_variable)


State 15

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 16

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 17

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 18

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 38


State 19

   19 statement_: error • ';'

    ';'  shift, and go to state 39


State 20

   59 primary: IDENTIFIER • '(' expression ')'
   60        | IDENTIFIER •

    '('  shift, and go to state 40

    $default  reduce using rule 60 (primary)


State 21

   56 primary: INT_LITERAL •

    $default  reduce using rule 56 (primary)


State 22

   57 primary: CHAR_LITERAL •

    $default  reduce using rule 57 (primary)


State 23

   58 primary: REAL_LITERAL •

    $default  reduce using rule 58 (primary)


State 24

   53 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 29

    primary  go to state 41


State 25

   24 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 42
    RIGHT  shift, and go to state 43

    direction  go to state 44


State 26

   23 statement: IF • or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    or_condition   go to state 47
    condition      go to state 48
    not_condition  go to state 49
    relation       go to state 50
    expression     go to state 51
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 27

   22 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 52
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 28

   21 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    or_condition   go to state 53
    condition      go to state 48
    not_condition  go to state 49
    relation       go to state 50
    expression     go to state 51
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 29

   55 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 54
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 30

   17 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 55


State 31

   18 statement_: statement • ';'

    ';'  shift, and go to state 56


State 32

   20 statement: expression •
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57

    $default  reduce using rule 20 (statement)


State 33

   47 expression: term •
   48 term: term • MULOP exp_term
   49     | term • MODOP exp_term

    MULOP  shift, and go to state 58
    MODOP  shift, and go to state 59

    $default  reduce using rule 47 (expression)


State 34

   50 term: exp_term •

    $default  reduce using rule 50 (term)


State 35

   51 exp_term: neg_term • EXPOP exp_term
   52         | neg_term •

    EXPOP  shift, and go to state 60

    $default  reduce using rule 52 (exp_term)


State 36

   54 neg_term: primary •

    $default  reduce using rule 54 (neg_term)


State 37

   10 variable: IDENTIFIER ':' • type IS statement ';'
   11         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 15
    INTEGER    shift, and go to state 16
    LIST       shift, and go to state 61
    REAL       shift, and go to state 17

    type  go to state 62


State 38

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 39

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 40

   59 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 63
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 41

   53 neg_term: NEGOP primary •

    $default  reduce using rule 53 (neg_term)


State 42

   33 direction: LEFT •

    $default  reduce using rule 33 (direction)


State 43

   34 direction: RIGHT •

    $default  reduce using rule 34 (direction)


State 44

   24 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 64
    MULOP  shift, and go to state 65
    EXPOP  shift, and go to state 66

    operator  go to state 67


State 45

   42 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 46

    relation    go to state 68
    expression  go to state 51
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 46

   44 relation: '(' • or_condition ')'
   55 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    or_condition   go to state 69
    condition      go to state 48
    not_condition  go to state 49
    relation       go to state 50
    expression     go to state 70
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 47

   23 statement: IF or_condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   38 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 71
    THEN  shift, and go to state 72


State 48

   39 or_condition: condition •
   40 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 73

    $default  reduce using rule 39 (or_condition)


State 49

   41 condition: not_condition •

    $default  reduce using rule 41 (condition)


State 50

   43 not_condition: relation •

    $default  reduce using rule 43 (not_condition)


State 51

   45 relation: expression • RELOP expression
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57
    RELOP  shift, and go to state 74


State 52

   22 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57
    IS     shift, and go to state 75


State 53

   21 statement: WHEN or_condition • ',' expression ':' expression
   38 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 71
    ','   shift, and go to state 76


State 54

   46 expression: expression • ADDOP term
   55 primary: '(' expression • ')'

    ADDOP  shift, and go to state 57
    ')'    shift, and go to state 77


State 55

   17 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 78


State 56

   18 statement_: statement ';' •

    $default  reduce using rule 18 (statement_)


State 57

   46 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    term      go to state 79
    exp_term  go to state 34
    neg_term  go to state 35
    primary   go to state 36


State 58

   48 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 80
    neg_term  go to state 35
    primary   go to state 36


State 59

   49 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 81
    neg_term  go to state 35
    primary   go to state 36


State 60

   51 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 82
    neg_term  go to state 35
    primary   go to state 36


State 61

   11 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 83


State 62

   10 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 84


State 63

   46 expression: expression • ADDOP term
   59 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 57
    ')'    shift, and go to state 85


State 64

   35 operator: ADDOP •

    $default  reduce using rule 35 (operator)


State 65

   36 operator: MULOP •

    $default  reduce using rule 36 (operator)


State 66

   37 operator: EXPOP •

    $default  reduce using rule 37 (operator)


State 67

   24 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 86
    '('         shift, and go to state 87

    list         go to state 88
    list_choice  go to state 89


State 68

   42 not_condition: NOTOP relation •

    $default  reduce using rule 42 (not_condition)


State 69

   38 or_condition: or_condition • OROP condition
   44 relation: '(' or_condition • ')'

    OROP  shift, and go to state 71
    ')'   shift, and go to state 90


State 70

   45 relation: expression • RELOP expression
   46 expression: expression • ADDOP term
   55 primary: '(' expression • ')'

    ADDOP  shift, and go to state 57
    RELOP  shift, and go to state 74
    ')'    shift, and go to state 77


State 71

   38 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    condition      go to state 91
    not_condition  go to state 49
    relation       go to state 50
    expression     go to state 51
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 72

   23 statement: IF or_condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 92
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 73

   40 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    not_condition  go to state 93
    relation       go to state 50
    expression     go to state 51
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 74

   45 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 94
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 75

   22 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 29 (cases)

    cases  go to state 95


State 76

   21 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 96
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 77

   55 primary: '(' expression ')' •

    $default  reduce using rule 55 (primary)


State 78

   17 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 17 (body)


State 79

   46 expression: expression ADDOP term •
   48 term: term • MULOP exp_term
   49     | term • MODOP exp_term

    MULOP  shift, and go to state 58
    MODOP  shift, and go to state 59

    $default  reduce using rule 46 (expression)


State 80

   48 term: term MULOP exp_term •

    $default  reduce using rule 48 (term)


State 81

   49 term: term MODOP exp_term •

    $default  reduce using rule 49 (term)


State 82

   51 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 51 (exp_term)


State 83

   11 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 15
    INTEGER    shift, and go to state 16
    REAL       shift, and go to state 17

    type  go to state 97


State 84

   10 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 98
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 85

   59 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 59 (primary)


State 86

   14 list_choice: IDENTIFIER •

    $default  reduce using rule 14 (list_choice)


State 87

   12 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expressions  go to state 99
    expression   go to state 100
    term         go to state 33
    exp_term     go to state 34
    neg_term     go to state 35
    primary      go to state 36


State 88

   13 list_choice: list •

    $default  reduce using rule 13 (list_choice)


State 89

   24 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 101


State 90

   44 relation: '(' or_condition ')' •

    $default  reduce using rule 44 (relation)


State 91

   38 or_condition: or_condition OROP condition •
   40 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 73

    $default  reduce using rule 38 (or_condition)


State 92

   23 statement: IF or_condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    $default  reduce using rule 26 (elsif_clauses)

    elsif_clauses  go to state 102


State 93

   40 condition: condition ANDOP not_condition •

    $default  reduce using rule 40 (condition)


State 94

   45 relation: expression RELOP expression •
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57

    $default  reduce using rule 45 (relation)


State 95

   22 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   28 cases: cases • case_

    error   shift, and go to state 103
    CASE    shift, and go to state 104
    OTHERS  shift, and go to state 105

    case_  go to state 106
    case   go to state 107


State 96

   21 statement: WHEN or_condition ',' expression • ':' expression
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57
    ':'    shift, and go to state 108


State 97

   11 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 109


State 98

   10 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 110


State 99

   12 list: '(' expressions • ')'
   15 expressions: expressions • ',' expression

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


State 100

   16 expressions: expression •
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57

    $default  reduce using rule 16 (expressions)


State 101

   24 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 24 (statement)


State 102

   23 statement: IF or_condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF
   25 elsif_clauses: elsif_clauses • elsif_clause

    ELSE   shift, and go to state 113
    ELSIF  shift, and go to state 114

    elsif_clause  go to state 115


State 103

   31 case_: error • ';'

    ';'  shift, and go to state 116


State 104

   32 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 117


State 105

   22 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 118


State 106

   28 cases: cases case_ •

    $default  reduce using rule 28 (cases)


State 107

   30 case_: case •

    $default  reduce using rule 30 (case_)


State 108

   21 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 119
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 109

   11 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 87

    list  go to state 120


State 110

   10 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 10 (variable)


State 111

   12 list: '(' expressions ')' •

    $default  reduce using rule 12 (list)


State 112

   15 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 121
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 113

   23 statement: IF or_condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 122
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 114

   27 elsif_clause: ELSIF • or_condition THEN statement_

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 45
    '('           shift, and go to state 46

    or_condition   go to state 123
    condition      go to state 48
    not_condition  go to state 49
    relation       go to state 50
    expression     go to state 51
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 115

   25 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 25 (elsif_clauses)


State 116

   31 case_: error ';' •

    $default  reduce using rule 31 (case_)


State 117

   32 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 124


State 118

   22 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 125
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 119

   21 statement: WHEN or_condition ',' expression ':' expression •
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57

    $default  reduce using rule 21 (statement)


State 120

   11 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 126


State 121

   15 expressions: expressions ',' expression •
   46 expression: expression • ADDOP term

    ADDOP  shift, and go to state 57

    $default  reduce using rule 15 (expressions)


State 122

   23 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 127


State 123

   27 elsif_clause: ELSIF or_condition • THEN statement_
   38 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 71
    THEN  shift, and go to state 128


State 124

   32 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 129
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 125

   22 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 130


State 126

   11 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 11 (variable)


State 127

   23 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 23 (statement)


State 128

   27 elsif_clause: ELSIF or_condition THEN • statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 131
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 129

   32 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 132


State 130

   22 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 133


State 131

   27 elsif_clause: ELSIF or_condition THEN statement_ •

    $default  reduce using rule 27 (elsif_clause)


State 132

   32 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 32 (case)


State 133

   22 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 22 (statement)
