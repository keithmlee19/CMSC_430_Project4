Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 list_choice: list
   12            | IDENTIFIER

   13 expressions: expressions ',' expression
   14            | expression

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | WHEN or_condition ',' expression ':' expression
   20          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   21          | IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF
   22          | FOLD direction operator list_choice ENDFOLD

   23 elsif_clauses: elsif_clauses elsif_clause
   24              | ε

   25 elsif_clause: ELSIF or_condition THEN statement_

   26 cases: cases case_
   27      | ε

   28 case_: case
   29      | error ';'

   30 case: CASE INT_LITERAL ARROW statement ';'

   31 direction: LEFT
   32          | RIGHT

   33 operator: ADDOP
   34         | MULOP
   35         | EXPOP

   36 or_condition: or_condition OROP condition
   37             | condition

   38 condition: condition ANDOP not_condition
   39          | not_condition

   40 not_condition: NOTOP relation
   41              | relation

   42 relation: '(' or_condition ')'
   43         | expression RELOP expression

   44 expression: expression ADDOP term
   45           | term

   46 term: term MULOP exp_term
   47     | term MODOP exp_term
   48     | exp_term

   49 exp_term: neg_term EXPOP exp_term
   50         | neg_term

   51 neg_term: NEGOP primary
   52         | primary

   53 primary: '(' expression ')'
   54        | INT_LITERAL
   55        | CHAR_LITERAL
   56        | REAL_LITERAL
   57        | IDENTIFIER '(' expression ')'
   58        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 42 53 57
    ')' (41) 10 42 53 57
    ',' (44) 13 19
    ':' (58) 8 9 19
    ';' (59) 2 8 9 15 16 17 20 29 30
    error (256) 17 29
    IDENTIFIER <iden> (258) 2 8 9 12 57 58
    INT_LITERAL <type> (259) 30 54
    CHAR_LITERAL <type> (260) 55
    REAL_LITERAL <type> (261) 56
    ADDOP (262) 33 44
    MULOP (263) 34 46
    MODOP (264) 47
    EXPOP (265) 35 49
    ANDOP (266) 38
    OROP (267) 36
    RELOP (268) 43
    NEGOP (269) 51
    NOTOP (270) 40
    ARROW (271) 20 30
    BEGIN_ (272) 15
    CASE (273) 30
    CHARACTER (274) 4
    ELSE (275) 21
    ELSIF (276) 25
    END (277) 15
    ENDFOLD (278) 22
    ENDIF (279) 21
    ENDSWITCH (280) 20
    FOLD (281) 22
    FUNCTION (282) 2
    IF (283) 21
    INTEGER (284) 3
    IS (285) 8 9 20
    LEFT (286) 31
    LIST (287) 9
    OF (288) 9
    OTHERS (289) 20
    REAL (290) 5
    RETURNS (291) 2
    RIGHT (292) 32
    SWITCH (293) 20
    THEN (294) 21 25
    WHEN (295) 19


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2
        on right: 1
    type <type> (49)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable (50)
        on left: 6 7
        on right: 1
    variable (51)
        on left: 8 9
        on right: 6
    list <type> (52)
        on left: 10
        on right: 9 11
    list_choice <type> (53)
        on left: 11 12
        on right: 22
    expressions <type> (54)
        on left: 13 14
        on right: 10 13
    body <type> (55)
        on left: 15
        on right: 1
    statement_ <type> (56)
        on left: 16 17
        on right: 15 21 25
    statement <type> (57)
        on left: 18 19 20 21 22
        on right: 8 16 20 30
    elsif_clauses <type> (58)
        on left: 23 24
        on right: 21 23
    elsif_clause <type> (59)
        on left: 25
        on right: 23
    cases <type> (60)
        on left: 26 27
        on right: 20 26
    case_ <type> (61)
        on left: 28 29
        on right: 26
    case <type> (62)
        on left: 30
        on right: 28
    direction (63)
        on left: 31 32
        on right: 22
    operator (64)
        on left: 33 34 35
        on right: 22
    or_condition (65)
        on left: 36 37
        on right: 19 21 25 36 42
    condition (66)
        on left: 38 39
        on right: 36 37 38
    not_condition (67)
        on left: 40 41
        on right: 38 39
    relation (68)
        on left: 42 43
        on right: 40 41
    expression <type> (69)
        on left: 44 45
        on right: 13 14 18 19 20 43 44 53 57
    term <type> (70)
        on left: 46 47 48
        on right: 44 45 46 47
    exp_term <type> (71)
        on left: 49 50
        on right: 46 47 48 49
    neg_term <type> (72)
        on left: 51 52
        on right: 49 50
    primary <type> (73)
        on left: 53 54 55 56 57 58
        on right: 51 52


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   15 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 30
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 37


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 38


State 18

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 39


State 19

   17 statement_: error • ';'

    ';'  shift, and go to state 40


State 20

   57 primary: IDENTIFIER • '(' expression ')'
   58        | IDENTIFIER •

    '('  shift, and go to state 41

    $default  reduce using rule 58 (primary)


State 21

   54 primary: INT_LITERAL •

    $default  reduce using rule 54 (primary)


State 22

   55 primary: CHAR_LITERAL •

    $default  reduce using rule 55 (primary)


State 23

   56 primary: REAL_LITERAL •

    $default  reduce using rule 56 (primary)


State 24

   51 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 29

    primary  go to state 42


State 25

   22 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 43
    RIGHT  shift, and go to state 44

    direction  go to state 45


State 26

   21 statement: IF • or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    or_condition   go to state 48
    condition      go to state 49
    not_condition  go to state 50
    relation       go to state 51
    expression     go to state 52
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 27

   20 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 53
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 28

   19 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    or_condition   go to state 54
    condition      go to state 49
    not_condition  go to state 50
    relation       go to state 51
    expression     go to state 52
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 29

   53 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 55
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 30

   15 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 56


State 31

   16 statement_: statement • ';'

    ';'  shift, and go to state 57


State 32

   18 statement: expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 18 (statement)


State 33

   45 expression: term •
   46 term: term • MULOP exp_term
   47     | term • MODOP exp_term

    MULOP  shift, and go to state 59
    MODOP  shift, and go to state 60

    $default  reduce using rule 45 (expression)


State 34

   48 term: exp_term •

    $default  reduce using rule 48 (term)


State 35

   49 exp_term: neg_term • EXPOP exp_term
   50         | neg_term •

    EXPOP  shift, and go to state 61

    $default  reduce using rule 50 (exp_term)


State 36

   52 neg_term: primary •

    $default  reduce using rule 52 (neg_term)


State 37

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 38

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 62


State 39

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 63
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 40

   17 statement_: error ';' •

    $default  reduce using rule 17 (statement_)


State 41

   57 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 64
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 42

   51 neg_term: NEGOP primary •

    $default  reduce using rule 51 (neg_term)


State 43

   31 direction: LEFT •

    $default  reduce using rule 31 (direction)


State 44

   32 direction: RIGHT •

    $default  reduce using rule 32 (direction)


State 45

   22 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 65
    MULOP  shift, and go to state 66
    EXPOP  shift, and go to state 67

    operator  go to state 68


State 46

   40 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 47

    relation    go to state 69
    expression  go to state 52
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 47

   42 relation: '(' • or_condition ')'
   53 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    or_condition   go to state 70
    condition      go to state 49
    not_condition  go to state 50
    relation       go to state 51
    expression     go to state 71
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 48

   21 statement: IF or_condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   36 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 72
    THEN  shift, and go to state 73


State 49

   37 or_condition: condition •
   38 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 74

    $default  reduce using rule 37 (or_condition)


State 50

   39 condition: not_condition •

    $default  reduce using rule 39 (condition)


State 51

   41 not_condition: relation •

    $default  reduce using rule 41 (not_condition)


State 52

   43 relation: expression • RELOP expression
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58
    RELOP  shift, and go to state 75


State 53

   20 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58
    IS     shift, and go to state 76


State 54

   19 statement: WHEN or_condition • ',' expression ':' expression
   36 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 72
    ','   shift, and go to state 77


State 55

   44 expression: expression • ADDOP term
   53 primary: '(' expression • ')'

    ADDOP  shift, and go to state 58
    ')'    shift, and go to state 78


State 56

   15 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 79


State 57

   16 statement_: statement ';' •

    $default  reduce using rule 16 (statement_)


State 58

   44 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    term      go to state 80
    exp_term  go to state 34
    neg_term  go to state 35
    primary   go to state 36


State 59

   46 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 81
    neg_term  go to state 35
    primary   go to state 36


State 60

   47 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 82
    neg_term  go to state 35
    primary   go to state 36


State 61

   49 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 83
    neg_term  go to state 35
    primary   go to state 36


State 62

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 84


State 63

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 85


State 64

   44 expression: expression • ADDOP term
   57 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 58
    ')'    shift, and go to state 86


State 65

   33 operator: ADDOP •

    $default  reduce using rule 33 (operator)


State 66

   34 operator: MULOP •

    $default  reduce using rule 34 (operator)


State 67

   35 operator: EXPOP •

    $default  reduce using rule 35 (operator)


State 68

   22 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 87
    '('         shift, and go to state 88

    list         go to state 89
    list_choice  go to state 90


State 69

   40 not_condition: NOTOP relation •

    $default  reduce using rule 40 (not_condition)


State 70

   36 or_condition: or_condition • OROP condition
   42 relation: '(' or_condition • ')'

    OROP  shift, and go to state 72
    ')'   shift, and go to state 91


State 71

   43 relation: expression • RELOP expression
   44 expression: expression • ADDOP term
   53 primary: '(' expression • ')'

    ADDOP  shift, and go to state 58
    RELOP  shift, and go to state 75
    ')'    shift, and go to state 78


State 72

   36 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    condition      go to state 92
    not_condition  go to state 50
    relation       go to state 51
    expression     go to state 52
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 73

   21 statement: IF or_condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 93
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 74

   38 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    not_condition  go to state 94
    relation       go to state 51
    expression     go to state 52
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 75

   43 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 95
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 76

   20 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 27 (cases)

    cases  go to state 96


State 77

   19 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 97
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 78

   53 primary: '(' expression ')' •

    $default  reduce using rule 53 (primary)


State 79

   15 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 15 (body)


State 80

   44 expression: expression ADDOP term •
   46 term: term • MULOP exp_term
   47     | term • MODOP exp_term

    MULOP  shift, and go to state 59
    MODOP  shift, and go to state 60

    $default  reduce using rule 44 (expression)


State 81

   46 term: term MULOP exp_term •

    $default  reduce using rule 46 (term)


State 82

   47 term: term MODOP exp_term •

    $default  reduce using rule 47 (term)


State 83

   49 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 49 (exp_term)


State 84

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 88

    list  go to state 98


State 85

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 86

   57 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 57 (primary)


State 87

   12 list_choice: IDENTIFIER •

    $default  reduce using rule 12 (list_choice)


State 88

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expressions  go to state 99
    expression   go to state 100
    term         go to state 33
    exp_term     go to state 34
    neg_term     go to state 35
    primary      go to state 36


State 89

   11 list_choice: list •

    $default  reduce using rule 11 (list_choice)


State 90

   22 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 101


State 91

   42 relation: '(' or_condition ')' •

    $default  reduce using rule 42 (relation)


State 92

   36 or_condition: or_condition OROP condition •
   38 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 74

    $default  reduce using rule 36 (or_condition)


State 93

   21 statement: IF or_condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    $default  reduce using rule 24 (elsif_clauses)

    elsif_clauses  go to state 102


State 94

   38 condition: condition ANDOP not_condition •

    $default  reduce using rule 38 (condition)


State 95

   43 relation: expression RELOP expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 43 (relation)


State 96

   20 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   26 cases: cases • case_

    error   shift, and go to state 103
    CASE    shift, and go to state 104
    OTHERS  shift, and go to state 105

    case_  go to state 106
    case   go to state 107


State 97

   19 statement: WHEN or_condition ',' expression • ':' expression
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58
    ':'    shift, and go to state 108


State 98

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 109


State 99

   10 list: '(' expressions • ')'
   13 expressions: expressions • ',' expression

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 100

   14 expressions: expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 14 (expressions)


State 101

   22 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 22 (statement)


State 102

   21 statement: IF or_condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF
   23 elsif_clauses: elsif_clauses • elsif_clause

    ELSE   shift, and go to state 112
    ELSIF  shift, and go to state 113

    elsif_clause  go to state 114


State 103

   29 case_: error • ';'

    ';'  shift, and go to state 115


State 104

   30 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 116


State 105

   20 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 117


State 106

   26 cases: cases case_ •

    $default  reduce using rule 26 (cases)


State 107

   28 case_: case •

    $default  reduce using rule 28 (case_)


State 108

   19 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 118
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 109

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 110

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 111

   13 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 119
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 112

   21 statement: IF or_condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 120
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 113

   25 elsif_clause: ELSIF • or_condition THEN statement_

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 47

    or_condition   go to state 121
    condition      go to state 49
    not_condition  go to state 50
    relation       go to state 51
    expression     go to state 52
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 114

   23 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 23 (elsif_clauses)


State 115

   29 case_: error ';' •

    $default  reduce using rule 29 (case_)


State 116

   30 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 122


State 117

   20 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 123
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 118

   19 statement: WHEN or_condition ',' expression ':' expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 19 (statement)


State 119

   13 expressions: expressions ',' expression •
   44 expression: expression • ADDOP term

    ADDOP  shift, and go to state 58

    $default  reduce using rule 13 (expressions)


State 120

   21 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 124


State 121

   25 elsif_clause: ELSIF or_condition • THEN statement_
   36 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 72
    THEN  shift, and go to state 125


State 122

   30 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 126
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 123

   20 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 127


State 124

   21 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 21 (statement)


State 125

   25 elsif_clause: ELSIF or_condition THEN • statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    FOLD          shift, and go to state 25
    IF            shift, and go to state 26
    SWITCH        shift, and go to state 27
    WHEN          shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 128
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 126

   30 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 129


State 127

   20 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 130


State 128

   25 elsif_clause: ELSIF or_condition THEN statement_ •

    $default  reduce using rule 25 (elsif_clause)


State 129

   30 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 30 (case)


State 130

   20 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 20 (statement)
